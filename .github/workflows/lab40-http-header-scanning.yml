# Name of the workflow
name: Lab40 HTTP header scanning
# How the workflow run is named in GitHub
run-name: Lab40 - ${{ github.actor }} is scanning HTTP headers ðŸš€
permissions: read-all
# Set your preferences for the script
defaults:
  run:
    shell: pwsh
on:
  # Make it possible to other workflows to call this
  workflow_call:
  # Make it possible to manually run this workflow
  workflow_dispatch:
jobs:
  venom-http-scanning:
    runs-on: ubuntu-latest
    # Steps to actually build the application
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install venom
        run: |
          curl https://github.com/ovh/venom/releases/download/v1.1.0/venom.linux-amd64 -L -o /usr/local/bin/venom && chmod +x /usr/local/bin/venom
          venom -h
      - name: Run the app
        run: |
          Write-Host "-- Build docker"
          docker build -t vulnerable-app-image -f ./apps/vulnerable-app/Dockerfile .

          Write-Host "-- Run docker"
          $containerId = docker run --tty --detach vulnerable-app-image --publish 8080:8080

          Write-Host "-- Fetch IP"
          $targetIp = docker inspect --format '{{ .NetworkSettings.IPAddress }}' $containerId
          Write-Host "TargetIP was $targetIp"
          $target = "http://"+$targetIp+":8080"

          Write-Host "-- Wait for the docker for a moment"
          Start-Sleep -Seconds 10

          Write-Host "-- Fetch something from target"
          curl $target

          Write-Host "-- Run venom"
          venom run --var="target_site=$target" ./scripts/oshp_validator_tests_suite.yml
  mdn-http-observatory-scanning:
    runs-on: ubuntu-latest
    # Steps to actually build the application
    steps:
      - name: Install Mozilla Observatory
        run: npm install --global @mdn/mdn-http-observatory
      - name: Run Mozilla Observatory
        run: mdn-http-observatory-scan huuhka.net
